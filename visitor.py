# -*- coding: utf-8 -*-
"""Visitor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MYrzbU9KM9KTrcM6oQif3ilrqTJziNiE
"""

# Visitor class definition
class Visitor:
    # Constructor of Visitor with parameters for all its attributes.
    def __init__(self, id, name, surname, age, is_teacher=False, is_student=False):
        self.id = id  # Set the ID of the Visitor
        self.name = name  # Set the name of the Visitor
        self.surname = surname  # Set the surname of the Visitor
        self.age = age  # Set the age of the Visitor
        self.is_teacher = is_teacher  # Set the teaching status of the Visitor
        self.is_student = is_student  # Set the student status of the Visitor
        self.tickets = []  # Initialize an empty list to store Ticket objects associated with the Visitor

    # Getter method for the ID
    def get_id(self):
        return self.id

    # Setter method for the ID
    def set_id(self, id):
        self.id = id

    # Getter method for the name
    def get_name(self):
        return self.name

    # Setter method for the name
    def set_name(self, name):
        self.name = name

    # Getter method for the surname
    def get_surname(self):
        return self.surname

    # Setter method for the surname
    def set_surname(self, surname):
        self.surname = surname

    # Getter method for the age
    def get_age(self):
        return self.age

    # Setter method for the age
    def set_age(self, age):
        self.age = age

    # Getter method for the is_teacher attribute
    def get_is_teacher(self):
        return self.is_teacher

    # Setter method for the is_teacher attribute
    def set_is_teacher(self, is_teacher):
        self.is_teacher = is_teacher

    # Getter method for the is_student attribute
    def get_is_student(self):
        return self.is_student

    # Setter method for the is_student attribute
    def set_is_student(self, is_student):
        self.is_student = is_student

    # Method to retrieve the list of tickets
    def get_tickets(self):
        return self.tickets

    # Method to add a ticket to the list of tickets
    def add_ticket(self, ticket):
        self.tickets.append(ticket)  # Add the Ticket object to the tickets list

    # Method to remove a ticket from the list of tickets
    def remove_ticket(self, ticket):
        self.tickets.remove(ticket)  # Remove the Ticket object from the tickets list